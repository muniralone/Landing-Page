{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { formatDate, CommonModule } from '@angular/common';\n\nfunction CountdownComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.i.text, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction CountdownComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nvar CountdownStatus;\n\n(function (CountdownStatus) {\n  CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n  CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n  CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n  CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\n\nclass CountdownTimer {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.fns = [];\n    this.commands = [];\n    this.nextTime = 0;\n    this.ing = false;\n  }\n\n  start() {\n    if (this.ing === true) {\n      return;\n    }\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n\n  process() {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n    diff = 100 - diff % 100;\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1]; // 100/s\n\n      if (0 === frequency) {\n        this.fns[i](count); // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n        const step = Math.floor(frequency / 20);\n\n        if (step > 0) {\n          this.fns[i](step);\n        } // 把末位还原成1\n\n\n        this.fns[i + 1] = frequency % 20 + 1;\n      }\n    }\n\n    if (!this.ing) {\n      return;\n    }\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn, frequency) {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn) {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n\n}\n\nCountdownTimer.ɵfac = function CountdownTimer_Factory(t) {\n  return new (t || CountdownTimer)(i0.ɵɵinject(i0.NgZone));\n};\n\nCountdownTimer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CountdownTimer,\n  factory: CountdownTimer.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownTimer, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})(); // tslint:disable: no-inferrable-types\n\n\nclass CountdownGlobalConfig {\n  constructor(locale) {\n    this.locale = locale;\n    this.demand = false;\n    this.leftTime = 0;\n    this.format = 'HH:mm:ss';\n    this.timezone = '+0000';\n\n    this.formatDate = ({\n      date,\n      formatStr,\n      timezone\n    }) => {\n      return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n    };\n  }\n\n}\n\nCountdownGlobalConfig.ɵfac = function CountdownGlobalConfig_Factory(t) {\n  return new (t || CountdownGlobalConfig)(i0.ɵɵinject(LOCALE_ID));\n};\n\nCountdownGlobalConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CountdownGlobalConfig,\n  factory: CountdownGlobalConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownGlobalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass CountdownComponent {\n  constructor(locale, timer, defCog, cdr, ngZone) {\n    this.locale = locale;\n    this.timer = timer;\n    this.defCog = defCog;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.frequency = 1000;\n    this._notify = {};\n    this.status = CountdownStatus.ing;\n    this.isDestroy = false;\n    this.i = {};\n    this.left = 0;\n    this.event = new EventEmitter();\n  }\n\n  set config(i) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n\n    this._config = i;\n  }\n\n  get config() {\n    return this._config;\n  }\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n\n\n  begin() {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n  /**\n   * Restart countdown\n   */\n\n\n  restart() {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n\n    this.init();\n    this.callEvent('restart');\n  }\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n\n\n  stop() {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n\n\n  pause() {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n  /**\n   * Resume countdown\n   */\n\n\n  resume() {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  callEvent(action) {\n    this.event.emit({\n      action,\n      left: this.left,\n      status: this.status,\n      text: this.i.text\n    });\n  }\n\n  init() {\n    const {\n      locale,\n      defCog\n    } = this;\n    const config = this.config = { ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config\n    }; // tslint:disable-next-line: no-bitwise\n\n    const frq = this.frequency = ~config.format.indexOf('S') ? 100 : 1000;\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n    this.getLeft(); // bind reflow to me\n\n    const _reflow = this.reflow;\n\n    this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach(time => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n\n        time = time * 1000;\n        time = time - time % frq;\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n    this.reflow(0, true);\n  }\n\n  destroy() {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n  /**\n   * 更新时钟\n   */\n\n\n  reflow(count = 0, force = false) {\n    if (this.isDestroy) {\n      return;\n    }\n\n    const {\n      status,\n      config,\n      _notify\n    } = this;\n\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n\n    let value = this.left = this.left - this.frequency * count;\n\n    if (value < 1) {\n      value = 0;\n    }\n\n    this.i = {\n      value,\n      text: config.formatDate({\n        date: value,\n        formatStr: config.format,\n        timezone: config.timezone\n      })\n    };\n\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n  /**\n   * 获取倒计时剩余帧数\n   */\n\n\n  getLeft() {\n    const {\n      config,\n      frequency\n    } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this.left = left - left % frequency;\n  }\n\n  ngOnInit() {\n    this.init();\n\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy() {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes) {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n\n}\n\nCountdownComponent.ɵfac = function CountdownComponent_Factory(t) {\n  return new (t || CountdownComponent)(i0.ɵɵdirectiveInject(LOCALE_ID), i0.ɵɵdirectiveInject(CountdownTimer), i0.ɵɵdirectiveInject(CountdownGlobalConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nCountdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountdownComponent,\n  selectors: [[\"countdown\"]],\n  hostVars: 2,\n  hostBindings: function CountdownComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"count-down\", true);\n    }\n  },\n  inputs: {\n    config: \"config\",\n    render: \"render\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([CountdownTimer]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function CountdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CountdownComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CountdownComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.render);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.render)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c0, ctx.i));\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'countdown',\n      template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n      host: {\n        '[class.count-down]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [CommonModule],\n      providers: [CountdownTimer],\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: CountdownTimer\n    }, {\n      type: CountdownGlobalConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    render: [{\n      type: Input\n    }],\n    event: [{\n      type: Output\n    }]\n  });\n})();\n\nclass CountdownModule {}\n\nCountdownModule.ɵfac = function CountdownModule_Factory(t) {\n  return new (t || CountdownModule)();\n};\n\nCountdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CountdownModule\n});\nCountdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CountdownComponent]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CountdownComponent],\n      exports: [CountdownComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };","map":{"version":3,"names":["i0","Injectable","LOCALE_ID","Inject","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","NgModule","i3","formatDate","CommonModule","CountdownStatus","CountdownTimer","constructor","ngZone","fns","commands","nextTime","ing","start","Date","runOutsideAngular","process","length","shift","diff","count","Math","floor","i","len","frequency","step","setTimeout","add","fn","push","remove","indexOf","splice","ɵfac","NgZone","ɵprov","type","CountdownGlobalConfig","locale","demand","leftTime","format","timezone","date","formatStr","args","providedIn","undefined","decorators","CountdownComponent","timer","defCog","cdr","_notify","status","isDestroy","left","event","config","notify","Array","isArray","_config","begin","callEvent","restart","stop","destroy","init","pause","resume","action","emit","text","frq","getLeft","_reflow","reflow","force","apply","forEach","time","Error","value","prettyText","detectChanges","run","done","end","stopTime","getTime","ngOnInit","ngOnDestroy","ngOnChanges","changes","firstChange","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","selector","template","host","encapsulation","None","changeDetection","OnPush","imports","providers","standalone","render","CountdownModule","ɵmod","ɵinj","exports"],"sources":["D:/angularsite/node_modules/ngx-countdown/fesm2020/ngx-countdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { formatDate, CommonModule } from '@angular/common';\n\nvar CountdownStatus;\n(function (CountdownStatus) {\n    CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n    CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n    CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n    CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\n\nclass CountdownTimer {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.fns = [];\n        this.commands = [];\n        this.nextTime = 0;\n        this.ing = false;\n    }\n    start() {\n        if (this.ing === true) {\n            return;\n        }\n        this.ing = true;\n        this.nextTime = +new Date();\n        this.ngZone.runOutsideAngular(() => {\n            this.process();\n        });\n    }\n    process() {\n        while (this.commands.length) {\n            this.commands.shift()();\n        }\n        let diff = +new Date() - this.nextTime;\n        const count = 1 + Math.floor(diff / 100);\n        diff = 100 - (diff % 100);\n        this.nextTime += 100 * count;\n        for (let i = 0, len = this.fns.length; i < len; i += 2) {\n            let frequency = this.fns[i + 1];\n            // 100/s\n            if (0 === frequency) {\n                this.fns[i](count);\n                // 1000/s\n            }\n            else {\n                // 先把末位至0，再每次加2\n                frequency += 2 * count - 1;\n                const step = Math.floor(frequency / 20);\n                if (step > 0) {\n                    this.fns[i](step);\n                }\n                // 把末位还原成1\n                this.fns[i + 1] = (frequency % 20) + 1;\n            }\n        }\n        if (!this.ing) {\n            return;\n        }\n        setTimeout(() => this.process(), diff);\n    }\n    add(fn, frequency) {\n        this.commands.push(() => {\n            this.fns.push(fn);\n            this.fns.push(frequency === 1000 ? 1 : 0);\n            this.ing = true;\n        });\n        return this;\n    }\n    remove(fn) {\n        this.commands.push(() => {\n            const i = this.fns.indexOf(fn);\n            if (i !== -1) {\n                this.fns.splice(i, 2);\n            }\n            this.ing = this.fns.length > 0;\n        });\n        return this;\n    }\n}\nCountdownTimer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownTimer, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nCountdownTimer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownTimer });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownTimer, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n// tslint:disable: no-inferrable-types\nclass CountdownGlobalConfig {\n    constructor(locale) {\n        this.locale = locale;\n        this.demand = false;\n        this.leftTime = 0;\n        this.format = 'HH:mm:ss';\n        this.timezone = '+0000';\n        this.formatDate = ({ date, formatStr, timezone }) => {\n            return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n        };\n    }\n}\nCountdownGlobalConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownGlobalConfig, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nCountdownGlobalConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownGlobalConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownGlobalConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }]; } });\n\nclass CountdownComponent {\n    constructor(locale, timer, defCog, cdr, ngZone) {\n        this.locale = locale;\n        this.timer = timer;\n        this.defCog = defCog;\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.frequency = 1000;\n        this._notify = {};\n        this.status = CountdownStatus.ing;\n        this.isDestroy = false;\n        this.i = {};\n        this.left = 0;\n        this.event = new EventEmitter();\n    }\n    set config(i) {\n        if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n            i.notify = [i.notify];\n        }\n        this._config = i;\n    }\n    get config() {\n        return this._config;\n    }\n    /**\n     * Start countdown, you must manually call when `demand: false`\n     */\n    begin() {\n        this.status = CountdownStatus.ing;\n        this.callEvent('start');\n    }\n    /**\n     * Restart countdown\n     */\n    restart() {\n        if (this.status !== CountdownStatus.stop) {\n            this.destroy();\n        }\n        this.init();\n        this.callEvent('restart');\n    }\n    /**\n     * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n     */\n    stop() {\n        if (this.status === CountdownStatus.stop) {\n            return;\n        }\n        this.status = CountdownStatus.stop;\n        this.destroy();\n        this.callEvent('stop');\n    }\n    /**\n     * Pause countdown, you can use `resume` to recover again\n     */\n    pause() {\n        if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.pause;\n        this.callEvent('pause');\n    }\n    /**\n     * Resume countdown\n     */\n    resume() {\n        if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n            return;\n        }\n        this.status = CountdownStatus.ing;\n        this.callEvent('resume');\n    }\n    callEvent(action) {\n        this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\n    }\n    init() {\n        const { locale, defCog } = this;\n        const config = (this.config = {\n            ...new CountdownGlobalConfig(locale),\n            ...defCog,\n            ...this.config,\n        });\n        // tslint:disable-next-line: no-bitwise\n        const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n        this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n        this.getLeft();\n        // bind reflow to me\n        const _reflow = this.reflow;\n        this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n        if (Array.isArray(config.notify)) {\n            config.notify.forEach((time) => {\n                if (time < 1) {\n                    throw new Error(`The notify config must be a positive integer.`);\n                }\n                time = time * 1000;\n                time = time - (time % frq);\n                this._notify[time] = true;\n            });\n        }\n        this.timer.add(this.reflow, frq).start();\n        this.reflow(0, true);\n    }\n    destroy() {\n        this.timer.remove(this.reflow);\n        return this;\n    }\n    /**\n     * 更新时钟\n     */\n    reflow(count = 0, force = false) {\n        if (this.isDestroy) {\n            return;\n        }\n        const { status, config, _notify } = this;\n        if (!force && status !== CountdownStatus.ing) {\n            return;\n        }\n        let value = (this.left = this.left - this.frequency * count);\n        if (value < 1) {\n            value = 0;\n        }\n        this.i = {\n            value,\n            text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n        };\n        if (typeof config.prettyText === 'function') {\n            this.i.text = config.prettyText(this.i.text);\n        }\n        this.cdr.detectChanges();\n        if (config.notify === 0 || _notify[value]) {\n            this.ngZone.run(() => {\n                this.callEvent('notify');\n            });\n        }\n        if (value === 0) {\n            this.ngZone.run(() => {\n                this.status = CountdownStatus.done;\n                this.destroy();\n                this.callEvent('done');\n            });\n        }\n    }\n    /**\n     * 获取倒计时剩余帧数\n     */\n    getLeft() {\n        const { config, frequency } = this;\n        let left = config.leftTime * 1000;\n        const end = config.stopTime;\n        if (!left && end) {\n            left = end - new Date().getTime();\n        }\n        this.left = left - (left % frequency);\n    }\n    ngOnInit() {\n        this.init();\n        if (!this.config.demand) {\n            this.begin();\n        }\n    }\n    ngOnDestroy() {\n        this.isDestroy = true;\n        this.destroy();\n    }\n    ngOnChanges(changes) {\n        if (!changes.config.firstChange) {\n            this.restart();\n        }\n    }\n}\nCountdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownComponent, deps: [{ token: LOCALE_ID }, { token: CountdownTimer }, { token: CountdownGlobalConfig }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nCountdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.3\", type: CountdownComponent, isStandalone: true, selector: \"countdown\", inputs: { config: \"config\", render: \"render\" }, outputs: { event: \"event\" }, host: { properties: { \"class.count-down\": \"true\" } }, providers: [CountdownTimer], usesOnChanges: true, ngImport: i0, template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'countdown',\n                    template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n                    host: { '[class.count-down]': 'true' },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    imports: [CommonModule],\n                    providers: [CountdownTimer],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [LOCALE_ID]\n                }] }, { type: CountdownTimer }, { type: CountdownGlobalConfig }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { config: [{\n                type: Input\n            }], render: [{\n                type: Input\n            }], event: [{\n                type: Output\n            }] } });\n\nclass CountdownModule {\n}\nCountdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCountdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent], exports: [CountdownComponent] });\nCountdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.3\", ngImport: i0, type: CountdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CountdownComponent],\n                    exports: [CountdownComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}